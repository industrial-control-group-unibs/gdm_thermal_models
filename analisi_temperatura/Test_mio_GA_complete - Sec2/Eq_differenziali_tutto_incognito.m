clear all
close all

syms T1(t) T2(t) K1 K2 C1 C2 alpha beta W Te
A = [(W*alpha-K1)/C1 K1/C1; K1/C2 -(K1+K2)/C2];
b = [W*(beta-alpha*Te)/C1; (K2/C2)*Te];

Y = [T1; T2];
odes = diff(Y) == A*Y + b;
    
C = Y(0) == [Te;Te];
    
[xSol(t), ySol(t)] = dsolve(odes,C);
xSol(t) = simplify(xSol(t));
ySol(t) = simplify(ySol(t));  

% %soluzione T1_Tot:
% - (exp(-(t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W*alpha))/(2*C1*C2))*((exp((t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W*alpha))/(2*C1*C2))*((4*C1*C2^2*(K1*K2*Te + K1*W*beta - K1*Te*W*alpha - K2*Te*W*alpha))/((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W*alpha) - 2*C1*C2*K2*Te))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2)) - (2*C1*C2*K1*W*beta)/(((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2)))*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K2 - C2*K1 + C2*W*alpha))/(2*C1*K1) - (exp(-(t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W*alpha))/(2*C1*C2))*((exp((t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W*alpha))/(2*C1*C2))*(2*C1*C2*K2*Te - (4*C1*C2^2*(K1*K2*Te + K1*W*beta - K1*Te*W*alpha - K2*Te*W*alpha))/(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W*alpha)))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2)) + (2*C1*C2*K1*W*beta)/((C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2)))*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W*alpha + 2*C1*C2*K2*W*alpha + C2^2*K1^2 - 2*C2^2*K1*W*alpha + C2^2*W^2*alpha^2)^(1/2) + C1*K1 + C1*K2 - C2*K1 + C2*W*alpha))/(2*C1*K1)
% 
% %soluzione T1_33:
% - (exp(-(t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W33*alpha))/(2*C1*C2))*((exp((t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W33*alpha))/(2*C1*C2))*((4*C1*C2^2*(K1*K2*Te33 + K1*W33*beta - K1*Te33*W33*alpha - K2*Te33*W33*alpha))/((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W33*alpha) - 2*C1*C2*K2*Te33))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2)) - (2*C1*C2*K1*W33*beta)/(((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W33*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2)))*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K2 - C2*K1 + C2*W33*alpha))/(2*C1*K1) - (exp(-(t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W33*alpha))/(2*C1*C2))*((exp((t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W33*alpha))/(2*C1*C2))*(2*C1*C2*K2*Te33 - (4*C1*C2^2*(K1*K2*Te33 + K1*W33*beta - K1*Te33*W33*alpha - K2*Te33*W33*alpha))/(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W33*alpha)))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2)) + (2*C1*C2*K1*W33*beta)/((C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W33*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2)))*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W33*alpha + 2*C1*C2*K2*W33*alpha + C2^2*K1^2 - 2*C2^2*K1*W33*alpha + C2^2*W33^2*alpha^2)^(1/2) + C1*K1 + C1*K2 - C2*K1 + C2*W33*alpha))/(2*C1*K1)
% %soluzione T1_50:
% - (exp(-(t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W50*alpha))/(2*C1*C2))*((exp((t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W50*alpha))/(2*C1*C2))*((4*C1*C2^2*(K1*K2*Te50 + K1*W50*beta - K1*Te50*W50*alpha - K2*Te50*W50*alpha))/((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W50*alpha) - 2*C1*C2*K2*Te50))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2)) - (2*C1*C2*K1*W50*beta)/(((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W50*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2)))*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K2 - C2*K1 + C2*W50*alpha))/(2*C1*K1) - (exp(-(t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W50*alpha))/(2*C1*C2))*((exp((t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W50*alpha))/(2*C1*C2))*(2*C1*C2*K2*Te50 - (4*C1*C2^2*(K1*K2*Te50 + K1*W50*beta - K1*Te50*W50*alpha - K2*Te50*W50*alpha))/(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W50*alpha)))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2)) + (2*C1*C2*K1*W50*beta)/((C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W50*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2)))*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W50*alpha + 2*C1*C2*K2*W50*alpha + C2^2*K1^2 - 2*C2^2*K1*W50*alpha + C2^2*W50^2*alpha^2)^(1/2) + C1*K1 + C1*K2 - C2*K1 + C2*W50*alpha))/(2*C1*K1)
% %soluzione T1_67:
% - (exp(-(t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W67*alpha))/(2*C1*C2))*((exp((t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W67*alpha))/(2*C1*C2))*((4*C1*C2^2*(K1*K2*Te67 + K1*W67*beta - K1*Te67*W67*alpha - K2*Te67*W67*alpha))/((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W67*alpha) - 2*C1*C2*K2*Te67))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2)) - (2*C1*C2*K1*W67*beta)/(((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W67*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2)))*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K2 - C2*K1 + C2*W67*alpha))/(2*C1*K1) - (exp(-(t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W67*alpha))/(2*C1*C2))*((exp((t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W67*alpha))/(2*C1*C2))*(2*C1*C2*K2*Te67 - (4*C1*C2^2*(K1*K2*Te67 + K1*W67*beta - K1*Te67*W67*alpha - K2*Te67*W67*alpha))/(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W67*alpha)))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2)) + (2*C1*C2*K1*W67*beta)/((C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W67*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2)))*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W67*alpha + 2*C1*C2*K2*W67*alpha + C2^2*K1^2 - 2*C2^2*K1*W67*alpha + C2^2*W67^2*alpha^2)^(1/2) + C1*K1 + C1*K2 - C2*K1 + C2*W67*alpha))/(2*C1*K1)
% %soluzione T1_100:
% - (exp(-(t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W100*alpha))/(2*C1*C2))*((exp((t*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W100*alpha))/(2*C1*C2))*((4*C1*C2^2*(K1*K2*Te100 + K1*W100*beta - K1*Te100*W100*alpha - K2*Te100*W100*alpha))/((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W100*alpha) - 2*C1*C2*K2*Te100))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2)) - (2*C1*C2*K1*W100*beta)/(((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K1 + C1*K2 + C2*K1 - C2*W100*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2)))*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K2 - C2*K1 + C2*W100*alpha))/(2*C1*K1) - (exp(-(t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W100*alpha))/(2*C1*C2))*((exp((t*(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W100*alpha))/(2*C1*C2))*(2*C1*C2*K2*Te100 - (4*C1*C2^2*(K1*K2*Te100 + K1*W100*beta - K1*Te100*W100*alpha - K2*Te100*W100*alpha))/(C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W100*alpha)))/(2*C2*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2)) + (2*C1*C2*K1*W100*beta)/((C1*K1 - (C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K2 + C2*K1 - C2*W100*alpha)*(C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2)))*((C1^2*K1^2 + 2*C1^2*K1*K2 + C1^2*K2^2 + 2*C1*C2*K1^2 - 2*C1*C2*K1*K2 + 2*C1*C2*K1*W100*alpha + 2*C1*C2*K2*W100*alpha + C2^2*K1^2 - 2*C2^2*K1*W100*alpha + C2^2*W100^2*alpha^2)^(1/2) + C1*K1 + C1*K2 - C2*K1 + C2*W100*alpha))/(2*C1*K1)
% 
